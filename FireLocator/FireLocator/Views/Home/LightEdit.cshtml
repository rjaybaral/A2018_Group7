@model FireLocator.Models.Victim_Info

@{
    ViewBag.Title = "LightEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">

    <h2>Victim Edit Information</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ID_victim, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_victim, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.ID_victim, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.ID_victim, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Item, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Item, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.Item, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Longhitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Longhitude, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                    @Html.EditorFor(model => model.Longhitude, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Longhitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="Status" name="Status">
                        <option value="Light">Light</option>
                        <option value="Heavy">Heavy</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div style="font-family:'Century Gothic';font-size:15px;">
        @Html.ActionLink("Back to List", "LightList")
    </div>

</div>


<script>
    var obj = @Html.Raw(Json.Encode(Model));
    if (obj.Status == "Heavy"){
        window.document.getElementById('Status').selectedIndex = 1;
    }else if (obj.Status == "Light"){
        window.document.getElementById('Status').selectedIndex = 0;
    }
</script>